using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

using Microsoft.Practices.Prism.Modularity;
using Microsoft.Practices.Unity;
using Microsoft.Practices.Prism.UnityExtensions;

namespace LogMeister.Module.Core
{
    [Record]
    [Module(ModuleName="Core")]
    public class Module : IModule
    {
        public Initialize() : void 
        {
            _ = _container.RegisterType.[LogProcessor](ContainerControlledLifetimeManager(), InjectionFactory(
                                    c =>
                                    {
                                        def r = LogProcessor(c.Resolve.[string](), c.ResolveAll.[ILineConsumer]().ToArray(), c.ResolveAll.[IIndexedLineConsumer]().ToArray());
                                        Task( () => r.Load() ).Start();
                                        r
                                    }))
                            .RegisterType.[ILogInfo, LogProcessor]()
                            .RegisterType.[IIndexedLineProvider, LogProcessor]()
                            .RegisterType.[TimeIndex](ExternallyControlledLifetimeManager())
                            .RegisterType.[IIndexedLineConsumer]("abc", InjectionFactory( x => { def z : TimeIndex = x.Resolve(); z}));
        }
    
        _container : IUnityContainer
    }
}
