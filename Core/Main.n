using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Console;
using System.Linq;
using System.IO;
using System.Text;
using System.Threading.Tasks;
using System.Globalization;

using Core;

class SeverityStaticsticsCounter : ILineConsumer
{
    public Satistics : Dictionary[string, int] { get { _statistics } } 
    
        public Process(line : ILine) : void
        {
            if (_statistics.ContainsKey(line.Severity))
                    ++_statistics[line.Severity];
                else
                    _statistics[line.Severity] = 1;
        }
    
    private _statistics = Dictionary.[string, int]();
}

module Program
{
    Main() : void
    {
        def stat = SeverityStaticsticsCounter();
        def p = LogProcessor("d:/log.txt", [ stat ], [] );
        def timer = Stopwatch();
        timer.Start();
        p.Load();
        timer.Stop();
        
        Console.WriteLine(p.Header);
        Console.WriteLine(p.ProcessedLineCount);
        Console.WriteLine(p.LoadedPercent);
        Console.WriteLine(p.FileSize);
        Console.WriteLine(timer.Elapsed);
        foreach (severity in stat.Satistics)
        {
            Console.WriteLine("{0} - {1} - {2}%", severity.Key, severity.Value, (severity.Value * 100) / p.ProcessedLineCount);
        }
       
        _ = ReadLine();        
    }
}