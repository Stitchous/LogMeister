using Nemerle.Collections;
using Nemerle.ComputationExpressions;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using LogMeister.Module.Core;
using LogMeister.LogView.DataVirtualization;


namespace LogMeister.LogView
{
	[Record]
	internal class OriginalLineProvider : IItemProvider[LineViewModel]
	{
		public FetchCount() : int
		{ 
			_logInfo.ProcessedLineCount;
		}

		public Fetch(beginIndex : int, endIndex : int) : IList[LineViewModel]
		{
			def range = 
				comp enumerable
				{
					foreach(idx in $[beginIndex..endIndex])
					{
						yield LineViewModel(idx, () => _indexedLineProvider.GetLine(idx))
					}
				};
			
			range.ToList()
		}
		
		public event CountChanged : Action[int] ;
		
		private _indexedLineProvider : IIndexedLineProvider;
		
		private _logInfo : ILogInfo;
	}
}