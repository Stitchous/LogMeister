using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.WPF;

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Threading;
using System.Linq;

using LogMeister.Module.Core;

namespace LogMeister.LogView
{
    [NotifyPropertyChanged]
    public class LogViewModel 
    {
        public this(lineProvider : IIndexedLineProvider, logInfo : ILogInfo)
        {
            _lineProvider = lineProvider;
            _logInfo = logInfo;
        
            _logInfo.Loaded += OnLoaded;
        }
    
        public    Lines : ObservableCollection[LineViewModel] { get; private set;}
        public FullPath : string { get { _logInfo.FullPath }}
        public   Header : string { get { _logInfo.Header }}
    
        private OnLoaded(_: object, _: EventArgs) : void
        {
            Lines = 
                ObservableCollection(
                Enumerable.Range(0, _logInfo.ProcessedLineCount)
                            .Select(i => LineViewModel(()=> { def line =_lineProvider.GetLine(i); (i,line.Message) })));
        
        }

        _lineProvider : IIndexedLineProvider;
        _logInfo      : ILogInfo;
    }
}
